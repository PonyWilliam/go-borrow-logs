syntax = "proto3";
/*
	ID int64 `gorm:"primary_key;auto_increment;not_null" json:"id"`
	ReqWID int64 `json:"req_wid"`//转借者ID
	RspWID int64 `json:"rsp_wid"`//收到者ID
	Confirm bool `json:"confirm"`//对方是否已确认
	Reason string `json:"reason"`//原因说明
	Boss int8 `json:"boss"`//是否需要boss确认，1代表不需要，2代表需要且未确认，3代表需要且确认
*/
package borrowLogs;

option go_package = "proto;borrowLogs";

service borrowLogs {
	rpc ToOther(Req_to_other)returns(Rsp_All);
	rpc confirm(Req_Confirm)returns(Rsp_All);
}
message Req_to_other{
	int64 ReqWID = 1;
	int64 RspWID = 2;
	int64 PID = 3;//产品ID
	string Reason = 4;
}
message Req_Confirm{
	int64 ID = 1;//根据ID确认同意
}
message Rsp_All{
	bool status = 1;//是否成功
	string message = 2;
}